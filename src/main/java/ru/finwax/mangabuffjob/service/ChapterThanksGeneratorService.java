package ru.finwax.mangabuffjob.service;

import org.springframework.stereotype.Service;

import java.util.Random;
@Service
public class ChapterThanksGeneratorService {

    private static final String[] THANKS_TEMPLATES = {
        "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –≥–ª–∞–≤—É%s %s",
        "—Å–ø–∞—Å–∏–±–æ, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –≥–ª–∞–≤–∞%s %s",
        "–û—Ç–ª–∏—á–Ω–∞—è –≥–ª–∞–≤–∞%s %s",
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≥–ª–∞–≤—É! %s",
        "–û–≥–æ, —É–∂–µ –Ω–æ–≤–∞—è –≥–ª–∞–≤–∞? %s",
        "–ö–∞–∫ –≤—Å–µ–≥–¥–∞ –∫—Ä—É—Ç–æ! %s",
        "–ñ–¥–∞–ª —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞! %s",
        "–ê–≤—Ç–æ—Ä, –≤—ã –≥–µ–Ω–∏–π! %s",
        "–ù–µ –º–æ–≥—É –æ—Ç–æ—Ä–≤–∞—Ç—å—Å—è! %s",
        "–õ—É—á—à–µ–µ, —á—Ç–æ —è —Å–µ–≥–æ–¥–Ω—è —á–∏—Ç–∞–ª %s",
        "–ö–∞–∫–æ–π –ø–æ–≤–æ—Ä–æ—Ç! %s",
        "–≠—Ç–æ –±—ã–ª–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ... %s",
        "–£–∂–µ —Ö–æ—á—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ! %s",
        "–ü–µ—Ä–µ—á–∏—Ç—ã–≤–∞—é –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ %s",
        "–ú–æ–∏ —ç–º–æ—Ü–∏–∏: %s",
        "–ó–∞—Ç—è–Ω—É–ª–æ —Å –ø–µ—Ä–≤—ã—Ö —Å—Ç—Ä–æ–∫ %s",
        "–ü–æ—á–µ–º—É —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å? %s",
        "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –≤–µ—á–µ—Ä–∞! %s",
        "–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π - —ç—Ç–æ —è? %s",
        "–°–ª–∏—à–∫–æ–º –∫—Ä—É—Ç–æ –¥–ª—è —Å–ª–æ–≤ %s",
        "–ü—Ä—è–º –≤ —Ç–æ—á–∫—É! %s",
        "–≠—Ç–æ—Ç –º–æ–º–µ–Ω—Ç... %s",
        "–•–æ—á—É –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π! %s",
        "–ö–∞–∫ –∂–∏—Ç—å –¥–∞–ª—å—à–µ? %s",
        "–ú–æ–π –¥–µ–Ω—å —Å–ø–∞—Å–µ–Ω! %s",
        "–°—Ç–æ–∏–ª–æ –∂–¥–∞—Ç—å! %s",
        "–õ—É—á—à–∞—è –≥–ª–∞–≤–∞ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ %s",
        "–ü–µ—Ä–µ–¥–∞–π—Ç–µ –∞–≤—Ç–æ—Ä—É —Å–ø–∞—Å–∏–±–æ! %s",
        "–°–ø–∞—Å–∏–±–æ –∞–≤—Ç–æ—Ä—É –∑–∞ –≥–ª–∞–≤—É%s %s",
        "–ø—Ä–æ—á–∏—Ç–∞–ª —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º%s %s",
        "–°–ø–∞—Å–∏–± –∑–∞ –ì–ª–∞–≤—É%s %s"
    };

    private static final String[] ADDITIONAL_PHRASES = {
        "–æ—á–µ–Ω—å –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω–æ",
        "–∂–¥—É –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è",
        "–∫–∞–∫ –∂–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ",
        "–Ω–µ –º–æ–≥—É –æ—Ç–æ—Ä–≤–∞—Ç—å—Å—è",
        "–∂–¥—É —á—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ!",
        "–∫–∞–∫ –∂–µ —ç—Ç–æ —ç–ø–∏—á–Ω–æ!",
        "–∞ –≤–æ—Ç —ç—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ",
        "–ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—é –≤—Ç–æ—Ä–æ–π —Ä–∞–∑",
        "—É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞—é –¥—Ä—É–∑—å—è–º",
        "—ç—Ç–æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂ - –º–æ–π –ª—é–±–∏–º—á–∏–∫",
        "—Ö–æ—á—É —Ç–∞–∫—É—é –∂–µ —Å–∏–ª—É –≥–≥",
        "–∫–æ–≥–¥–∞ –≤—ã–π–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è?",
        "–∞ –≤–æ—Ç –∑–¥–µ—Å—å —è –ø—Ä–æ—Å–ª–µ–∑–∏–ª—Å—è",
        "—Å–º–µ—è–ª—Å—è –¥–æ —Å–ª–µ–∑",
        "–º—É—Ä–∞—à–∫–∏ –ø–æ –∫–æ–∂–µ",
        "–Ω–µ –º–æ–≥—É –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –¥—É–º–∞—Ç—å –æ–± —ç—Ç–æ–º",
        "—ç—Ç–æ—Ç —Å—é–∂–µ—Ç–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç...",
        "–ª—É—á—à–µ, —á–µ–º –≤ –ø—Ä–æ—à–ª–æ–π –≥–ª–∞–≤–µ",
        "—Ö–æ—á—É –±–æ–ª—å—à–µ —ç–∫—à–µ–Ω-—Å—Ü–µ–Ω",
        "—Ä–æ–º–∞–Ω—Ç–∏–∫–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ",
        "–∫–æ–º–µ–¥–∏–π–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã - –æ–≥–æ–Ω—å",
        "–¥–∏–∞–ª–æ–≥–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø–∞–¥",
        "–≤–∏–∑—É–∞–ª –≤ –≥–æ–ª–æ–≤–µ - –∫–∞–∫ –≤ –∫–∏–Ω–æ",
        "–∑–∞–ø–æ–µ–º —á–∏—Ç–∞—é —É–∂–µ —á–∞—Å",
        "–ø–µ—Ä–µ–∂–∏–≤–∞—é –∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
        "–∫—Ç–æ –µ—â–µ –∑–∞–º–µ—Ç–∏–ª —ç—Ç—É –¥–µ—Ç–∞–ª—å?",
        "—ç—Ç–∞ —Å—Ü–µ–Ω–∞ –∑–∞–ø–∞–ª–∞ –≤ –¥—É—à—É",
        "–∞–≤—Ç–æ—Ä —Ç–æ—á–Ω–æ –≥–µ–Ω–∏–π —Å—é–∂–µ—Ç–∞",
        "—Ö–æ—á—É —Ñ–∞–Ω—Ñ–∏–∫ –ø–æ —ç—Ç–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π",
        "–∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –∞–Ω–∏–º–µ-–∞–¥–∞–ø—Ç–∞—Ü–∏—è?",
        "—ç—Ç–æ –¥–æ—Å—Ç–æ–π–Ω–æ —ç–∫—Ä–∞–Ω–∏–∑–∞—Ü–∏–∏",
        "–ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—é –ª—é–±–∏–º—ã–µ –º–æ–º–µ–Ω—Ç—ã",
        "–≤—ã –ø—Ä–æ—Å—Ç–æ –º–∞—Å—Ç–µ—Ä —Å–ª–æ–≤–∞",
        "–æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ"
    };

    private static final String[] PUNCTUATION_MARKS = { "!", ".", ",", "...","\uD83E\uDD23\uD83E\uDD23","‚ù§Ô∏è", "üòç", "ü§Ø" };

    private final Random random = new Random();

    public String generateThanks() {
        String template = THANKS_TEMPLATES[random.nextInt(THANKS_TEMPLATES.length)];
        String additional = ADDITIONAL_PHRASES[random.nextInt(ADDITIONAL_PHRASES.length)];
        String punctuation = PUNCTUATION_MARKS[random.nextInt(PUNCTUATION_MARKS.length)];

        String result = String.format(template, punctuation, additional);

        while (result.length() < 10) {
            result += " " + ADDITIONAL_PHRASES[random.nextInt(ADDITIONAL_PHRASES.length)];
        }


        return result;
    }
}